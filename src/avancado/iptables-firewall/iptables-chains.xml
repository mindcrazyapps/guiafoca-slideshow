<?xml version="1.0" encoding="UTF-8"?>

 fw-iptables-chains">###Manipulando chains

O <command>iptables trabalha com uma tabela de regras que é analisada
uma a uma até que a última seja processada.  Por padrão, se uma regra tiver
qualquer erro, uma mensagem será mostrada e ela descartada.  O pacote não
conferirá e a ação final (se ele vai ser aceito ou rejeitado) dependerá das
regras seguintes.


As opções passadas ao <command>iptables usadas para manipular os
chains são **SEMPRE** em maiúsculas.  As
seguintes operações podem ser realizadas:

 fw-iptables-chains-A">###Adicionando regras - A

Como exemplo vamos criar uma regra que bloqueia o acesso a nosso própria
máquina (127.0.0.1 - loopback).  Primeiro daremos um ping para verificar seu
funcionamento:

<screen>
#ping 127.0.0.1
PING 127.0.0.1 (127.0.0.1): 56 data bytes
64 bytes from 127.0.0.1: icmp_seq=0 ttl=255 time=0.6 ms
64 bytes from 127.0.0.1: icmp_seq=1 ttl=255 time=0.5 ms

--- 127.0.0.1 ping statistics ---
2 packets transmitted, 2 packets received, 0% packet loss
round-trip min/avg/max = 0.5/0.5/0.6 ms


Ok, a máquina responde, agora vamos incluir uma regra no chain INPUT
(**-A INPUT**) que bloqueie (**-j DROP**)
qualquer acesso indo ao endereço 127.0.0.1 (**-d 127.0.0.1**):


<literal>iptables -t filter -A INPUT -d 127.0.0.1 -j DROP


Agora verificamos um novo ping:

<screen>
#ping 127.0.0.1
PING 127.0.0.1 (127.0.0.1): 56 data bytes

--- 127.0.0.1 ping statistics ---
2 packets transmitted, 0 packets received, 100% packet loss


Desta vez a máquina 127.0.0.1 não respondeu, pois todos os pacotes com o
destino 127.0.0.1 (-d 127.0.0.1) são rejeitados (-j DROP).  A opção
**-A** é usada para adicionar novas regras no final do chain.
Além de **-j DROP** que serve para rejeitar os pacotes,
podemos também usar **-j ACCEPT** para aceitar pacotes.  A
opção <literal>-j é chamada de **alvo da regra** ou
somente **alvo** pois define o destino do pacote que atravessa
a regra (veja <xref linkend="fw-iptables-outras-alvo"/>).  Bem vindo a base de
um sistema de firewall :-)


**OBS1:** - O acesso a interface loopback não
deve ser de forma alguma bloqueado, pois muitos aplicativos utilizam soquetes
tcp para realizarem conexões, mesmo que você não possua uma rede interna.


**OBS2:** - A tabela **filter**
será usada como padrão caso nenhuma tabela seja especificada através da opção
<literal>-t.



 fw-iptables-chains-L">###Listando regras - L

A seguinte sintaxe é usada para listar as regras criadas:


<literal>iptables [**-t tabela**] -L
[**chain**] [**opções**]


Onde:

<variablelist>
<varlistentry>
<term>**tabela**
<listitem>

É uma das tabelas usadas pelo <command>iptables.  Se a tabela não for
especificada, a tabela **filter** será usada como padrão.
Veja <xref linkend="fw-iptables-tabelas"para detalhes.



<varlistentry>
<term>**chain**
<listitem>

Um dos chains disponíveis na tabela acima (veja <xref linkend="fw-iptables-tabelas"/>) ou criado pelo usuário (<xref linkend="fw-iptables-chains-N"/>).  Caso o chain não seja especificado, todos
os chains da tabela serão mostrados.



<varlistentry>
<term>**opções**
<listitem>

As seguintes opções podem ser usadas para listar o conteúdo de chains:

<itemizedlist>
<listitem>

<literal>-v - Exibe mais detalhes sobre as regras criadas nos chains.


<listitem>

<literal>-n - Exibe endereços de máquinas/portas como números ao
invés de tentar a resolução DNS e consulta ao
<filename>/etc/services</filename>.  A resolução de nomes pode tomar muito
tempo dependendo da quantidade de regras que suas tabelas possuem e velocidade
de sua conexão.


<listitem>

<literal>-x - Exibe números exatos ao invés de números redondos.
Também mostra a faixa de portas de uma regra de firewall.


<listitem>

<literal>--line-numbers - Exibe o número da posição da regra na
primeira coluna da listagem.





</variablelist>

Para listar a regra criada anteriormente usamos o comando:

<screen>
#iptables -t filter -L INPUT

Chain INPUT (policy ACCEPT)
target     prot opt source               destination         
DROP       all  --  anywhere             localhost


O comando <literal>iptables -L INPUT -n tem o mesmo efeito, a
diferença é que são mostrados números ao invés de nomes:

<screen>
#iptables -L INPUT -n

Chain INPUT (policy ACCEPT)
target     prot opt source               destination
DROP       all  --  0.0.0.0/0            127.0.0.1


#iptables -L INPUT -n --line-numbers

Chain INPUT (policy ACCEPT)
num target     prot opt source               destination
1   DROP       all  --  0.0.0.0/0            127.0.0.1

#iptables -L INPUT -n -v
Chain INPUT (policy ACCEPT 78 packets, 5820 bytes)
 pkts bytes target     prot opt in     out     source               destination
    2   194 DROP       icmp --  *      *       0.0.0.0/0            127.0.0.1


Os campos assim possuem o seguinte significado:

<variablelist>
<varlistentry>
<term>Chain INPUT
<listitem>

Nome do chain listado



<varlistentry>
<term>(policy ACCEPT 78 packets, 5820 bytes)
<listitem>

política padrão do chain (veja <xref linkend="fw-iptables-chains-P"/>).



<varlistentry>
<term>pkts
<listitem>

Quantidade de pacotes que atravessaram a regra (veja <xref linkend="fw-iptables-chains-Z"/>).



<varlistentry>
<term>bytes
<listitem>

Quantidade de bytes que atravessaram a regra.  Pode ser referenciado com K
(Kilobytes), M (Megabytes), G (Gigabytes).



<varlistentry>
<term>target
<listitem>

O alvo da regra, o destino do pacote.  Pode ser ACCEPT, DROP ou outro chain.
Veja <xref linkend="fw-iptables-outras-alvo"para detalhes sobre a
especificação de um alvo.



<varlistentry>
<term>prot
<listitem>

Protocolo especificado pela regra.  Pode ser udp, tcp, icmp ou all.  Veja <xref linkend="fw-iptables-outras-proto"para detalhes.



<varlistentry>
<term>opt
<listitem>

Opções extras passadas a regra.  Normalmente "!"  (veja <xref linkend="fw-iptables-outras-excessoes"/>) ou "f" (veja <xref linkend="fw-iptables-outras-fragmentos"/>).



<varlistentry>
<term>in
<listitem>

Interface de entrada (de onde os dados chegam).  Veja <xref linkend="fw-iptables-outras-iface"/>.



<varlistentry>
<term>out
<listitem>

Interface de saída (para onde os dados vão).  Veja <xref linkend="fw-iptables-outras-iface"/>.



<varlistentry>
<term>source
<listitem>

Endereço de origem.  Veja <xref linkend="fw-iptables-outras-endOD"/>.



<varlistentry>
<term>destination
<listitem>

Endereço de destino.  Veja <xref linkend="fw-iptables-outras-endOD"/>.



<varlistentry>
<term>outras opções
<listitem>

Estas opções normalmente aparecem quando são usadas a opção -x:

<itemizedlist>
<listitem>

<literal>dpt ou dpts - Especifica a porta ou faixa de portas de
destino.


<listitem>

<literal>reject-with icmp-port-unreachable - Significa que foi usado
o alvo REJECT naquela regra (veja <xref linkend="fw-iptables-outras-alvo-REJECT"/>).





</variablelist>


 fw-iptables-chains-D">###Apagando uma regra - D

Para apagar um chain, existem duas alternativas:

<orderedlist numeration="arabic">
<listitem>

Quando sabemos qual é o número da regra no chain (listado com a opção
<literal>-L) podemos referenciar o número diretamente.  Por exemplo,
para apagar a regra criada acima:


<literal>iptables -t filter -D INPUT 1


Esta opção não é boa quando temos um firewall complexo com um grande número de
regras por chains, neste caso a segunda opção é a mais apropriada.


<listitem>

Usamos a mesma sintaxe para criar a regra no chain, mas trocamos
<literal>-A por <literal>-D:


<literal>iptables -t filter -D INPUT -d 127.0.0.1 -j DROP


Então a regra correspondentes no chain INPUT será automaticamente apagada
(confira listando o chain com a opção "-L").  Caso o chain possua várias regras
semelhantes, somente a primeira será apagada.


**OBS:** Não é possível apagar os chains
defaults do <command>iptables (**INPUT**,
**OUTPUT**...).


</orderedlist>


 fw-iptables-chains-I">###Inserindo uma regra - I

Precisamos que o tráfego vindo de <filename>192.168.1.15</filename> não seja
rejeitado pelo nosso firewall.  Não podemos adicionar uma nova regra (-A) pois
esta seria incluída no final do chain e o tráfego seria rejeitado pela primeira
regra (nunca atingindo a segunda).  A solução é inserir a nova regra antes da
regra que bloqueia todo o tráfego ao endereço <filename>127.0.0.1</filename> na
posição 1:


<literal>iptables -t filter -I INPUT 1 -s 192.168.1.15 -d 127.0.0.1 -j
ACCEPT


Após este comando, temos a regra inserida na primeira posição do chain (repare
no número 1 após INPUT) e a antiga regra número 1 passa a ser a número 2.
Desta forma a regra acima será consultada, se a máquina de origem for
192.168.1.15 então o tráfego estará garantido, caso contrário o tráfego com o
destino 127.0.0.1 será bloqueado na regra seguinte.



 fw-iptables-chains-R">###Substituindo uma regra - R

Após criar nossa regra, percebemos que a nossa intenção era somente bloquear os
pings com o destino <filename>127.0.0.1</filename> (pacotes ICMP) e não havia
necessidade de bloquear todo o tráfego da máquina.  Existem duas alternativas:
apagar a regra e inserir uma nova no lugar ou modificar diretamente a regra já
criada sem afetar outras regras existentes e mantendo a sua ordem no chain
(isso é muito importante).  Use o seguinte comando:


<literal>iptables -R INPUT 2 -d 127.0.0.1 -p icmp -j DROP


O número <literal>2 é o número da regra que será substituída no chain
INPUT, e deve ser especificado.  O comando acima substituirá a regra 2 do chain
INPUT (-R INPUT 2) bloqueando (-j DROP) qualquer pacote icmp (-p icmp) com o
destino <filename>127.0.0.1</filename> (-d 127.0.0.1).



 fw-iptables-chains-N">###Criando um novo chain - N

Em firewalls organizados com um grande número de regras, é interessante criar
chains individuais para organizar regras de um mesmo tipo ou que tenha por
objetivo analisar um tráfego de uma mesma categoria (interface, endereço de
origem, destino, protocolo, etc) pois podem consumir muitas linhas e tornar o
gerenciamento do firewall confuso (e conseqüentemente causar sérios riscos de
segurança).  O tamanho máximo de um nome de chain é de 31 caracteres e podem
conter tanto letras maiúsculas quanto minúsculas.


<literal>iptables [**-t tabela**] [**-N
novochain**]


Para criar o chain **internet** (que pode ser usado para
agrupar as regras de internet) usamos o seguinte comando:

<screen>
 iptables -t filter -N internet


Para inserir regras no chain **internet** basta especifica-lo
após a opção -A:

<screen>
 iptables -t filter -A internet -s 200.200.200.200 -j DROP


E então criamos um pulo (-j) do chain **INPUT** para o chain
**internet**:


<literal>iptables -t filter -A INPUT -j internet


**OBS:** O chain criando pelo usuário pode ter
seu nome tanto em maiúsculas como minúsculas.


Se uma máquina do endereço 200.200.200.200 tentar acessar sua máquina, o
<command>iptables consultará as seguintes regras:

<screen>
`INPUT'                         `internet'
 ----------------------------    -----------------------------
 | Regra1: -s 192.168.1.15  |    | Regra1: -s 200.200.200.200|
 |--------------------------|    |---------------------------|
 | Regra2: -s 192.168.1.1   |    | Regra2: -d 192.168.1.1    |
 |--------------------------|    -----------------------------
 | Regra3: -j DROP          |
 ----------------------------

O pacote tem o endereço de origem 
200.200.200.200, ele passa pela
primeira e segunda regras do chain
INPUT, a terceira regra direciona 
para o chain internet

                                    _______________________________________
                           v       /                                      v
 /-------------------------|-\    / /-------------------------------------|-\
 | Regra1: -s 192.168.1.15 | |   /  | Regra1: -s 200.200.200.200 -j DROP  \_____\
 |-------------------------|-|  /   |---------------------------------------|   /
 | Regra2: -s 192.168.1.1  | | /    | Regra2: -d 200.200.200.202 -j DROP    |
 |-------------------------|-|/     \---------------------------------------/
 | Regra3: -j internet      /|
 |---------------------------|       No chain internet, a primeira regra confere
 | Regra4: -j DROP           |       com o endereço de origem 200.200.200.200 e 
 \---------------------------/       o pacote é bloqueado. 
 

Se uma máquina com o endereço de origem 200.200.200.201 tentar acessar a máquina, 
então as regra consultadas serão as seguintes:


O pacote tem o endereço de origem 
200.200.200.201, ele passa pela
primeira e segunda regras do chain
INPUT, a terceira regra direciona 
para o chain internet               ______________________________________
                           v       /                                      v
 /-------------------------|-\    / /-------------------------------------|-\
 | Regra1: -s 192.168.1.15 | |   /  | Regra1: -s 200.200.200.200 -j DROP  | |
 |-------------------------|-|  /   |-------------------------------------|-|
 | Regra2: -s 192.168.1.1  | | /    | Regra2: -s 200.200.200.202 -j DROP  | |
 |-------------------------|-|/     \-------------------------------------|-/
 | Regra3: -j internet      /|                                            v
 |---------------------------|                                           /
 | Regra4: -j DROP         --+-------------------------------------------      
 \------------------------/-/       O pacote passa pelas regras 1 e 2 do chain
                          |         internet, como ele não confere com nenhuma
                          v         das 2 regras ele retorna ao chain INPUT e é 
 Esta regra é a número 4            analisado pela regra seguinte.
 que diz para rejeitar o 
 pacote.



 s31.2.7">###Renomeando um chain criado pelo usuário - E

Se por algum motivo precisar renomear um chain criado por você na tabela
**filter**, **nat** ou
**mangle**, isto poderá ser feito usando a opção
**-E** do <command>iptables:

<screen>
iptables -t filter -E chain-antigo novo-chain


Note que não é possível renomear os chains defaults do
<command>iptables.



 s31.2.8">###Listando os nomes de todas as tabelas atuais

Use o comando <literal>cat /proc/net/ip_tables_names para fazer isto.
É interessante dar uma olhada nos arquivos dentro do diretório
<filename>/proc/net</filename>, pois os arquivos existentes podem lhe
interessar para outras finalidades.



 fw-iptables-chains-F">###Limpando as regras de um chain - F

Para limpar todas as regras de um chain, use a seguinte sintaxe:


<literal>iptables [**-t tabela**] [**-F
chain**]


Onde:

<variablelist>
<varlistentry>
<term>**tabela**
<listitem>

Tabela que contém o chain que desejamos zerar.



<varlistentry>
<term>**chain**
<listitem>

Chain que desejamos limpar.  Caso um chain não seja especificado, todos os
chains da tabela serão limpos.



</variablelist>
<screen>
  iptables -t filter -F INPUT
  iptables -t filter -F



 fw-iptables-chains-X">###Apagando um chain criado pelo usuário - X

Para apagarmos um chain criado pelo usuário, usamos a seguinte sintaxe:


<literal>iptables [**-t tabela**] [**-X
chain**]


Onde:

<variablelist>
<varlistentry>
<term>tabela
<listitem>

Nome da tabela que contém o chain que desejamos excluir.



<varlistentry>
<term>chain
<listitem>

Nome do chain que desejamos apagar.  Caso não seja especificado, todos os
chains definidos pelo usuário na tabela especificada serão excluídos.



</variablelist>

**OBS:** - Chains embutidos nas tabelas não
podem ser apagados pelo usuário.  Veja os nomes destes chains em <xref linkend="fw-iptables-tabelas"/>.

<screen>
 iptables -t filter -X internet
 iptables -X



 fw-iptables-chains-Z">###Zerando contador de bytes dos chains - Z

Este comando zera o campo **pkts** e
**bytes** de uma regra do <command>iptables.  Estes
campos podem ser visualizados com o comando <command>iptables -L -v.
A seguinte sintaxe é usada:


<literal>iptables [**-t tabela**] [**-Z
chain**] [**-L**]


Onde:

<variablelist>
<varlistentry>
<term>**tabela**
<listitem>

Nome da tabela que contém o chain que queremos zerar os contadores de bytes e
pacotes.



<varlistentry>
<term>**chain**
<listitem>

Chain que deve ter os contadores zerados.  Caso não seja especificado, todos os
chains da tabela terão os contadores zerados.  Note que as opções
**-Z** e **-L** podem ser usadas juntas,
assim o chain será listado e imediatamente zerado.  Isto evita a passagem de
pacotes durante a listagem de um chain.



</variablelist>
<screen>
 iptables -t filter -Z INPUT



 fw-iptables-chains-P">###Especificando a política padrão de um chain - P

A política padrão determina o que acontecerá com um pacote quando ele chegar ao
final das regras contidas em um chain.  A política padrão do
<command>iptables é "ACCEPT" mas isto pode ser alterado com o
comando:


<literal>iptables [**-t tabela**] [**-P
chain**] [**ACCEPT/DROP**]


Onde:

<variablelist>
<varlistentry>
<term>tabela
<listitem>

Tabela que contém o chain que desejamos modificar a política padrão.



<varlistentry>
<term>chain
<listitem>

Define o chain que terá a política modificada.  O chain deve ser especificado.



<varlistentry>
<term>ACCEPT/DROP
<listitem>

ACCEPT aceita os pacotes caso nenhuma regra do chain conferir (usado em regras
permissivas).  DROP rejeita os pacotes caso nenhuma regra do chain conferir
(usado em regras restritivas).



</variablelist>

A política padrão de um chain é mostrada com o comando <command>iptables
-L:

<screen>
# iptables -L INPUT

Chain INPUT (policy ACCEPT)
target     prot opt source               destination         
DROP       icmp --  anywhere             localhost


No exemplo acima, a política padrão de INPUT é ACCEPT (policy ACCEPT), o que
significa que qualquer pacote que não seja rejeitado pela regra do chain, será
aceito.  Para alterar a política padrão deste chain usamos o comando:

<screen>
 iptables -t filter -P INPUT DROP


**NOTA:** As políticas de acesso PERMISSIVASS
(ACCEPT) normalmente são usadas em conjunto com regras restritivas no chain
correspondentes (tudo é bloqueado e o que sobrar é liberado) e políticas
RESTRITIVAS (DROP) são usadas em conjunto com regras permissivas no chain
correspondente (tudo é liberado e o que sobrar é bloqueado pela política
padrão).





